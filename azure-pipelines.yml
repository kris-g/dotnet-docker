# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'ubuntu-18.04'

steps:
# - task: UseDotNet@2
#   displayName: 'Install .NET Core SDK'
#   inputs:
#     version: 3.1.x

# - task: DotNetCoreCLI@2
#   displayName: 'Restore'
#   inputs:
#     command: 'restore'
#     projects: '**/*.csproj'

# - task: DotNetCoreCLI@2
#   displayName: 'Build'
#   inputs:
#     command: 'build'
#     projects: '**/*.csproj'
#     arguments: '-c Release'

- task: Docker@2
  inputs:
    containerRegistry: 'Docker Hub (kr1sg)'
    command: 'login'

#- script: 'docker run --rm --privileged multiarch/qemu-user-static:register --reset'
#    docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

- script: |
    docker buildx create --use
    docker buildx build --push -f ./samples/aspnetapp/Dockerfile.alpine-arm64 -t kr1sg/aspnetapp:latest --platform linux/arm64/v8 ./samples/aspnetapp
  displayName: Run docker buildx

# - script: 'docker buildx create multibuilder'
# - script: 'docker buildx use multibuilder'
# - script: 'docker buildx build -f ./Src/KrisG.SickBox.WorkerService/Dockerfile -t kr1sg/krisg.sickbox.workerservice:latest --platform linux/amd64,linux/arm/v7,linux/arm64/v8 ./Src'

# - task: Docker@2
#   inputs:
#     containerRegistry: 'Docker Hub (kr1sg)'
#     repository: 'kr1sg/krisg.sickbox.workerservice'
#     command: 'buildAndPush'
#     Dockerfile: './Src/KrisG.SickBox.WorkerService/Dockerfile'
#     buildContext: './Src'
#     tags: 'latest'